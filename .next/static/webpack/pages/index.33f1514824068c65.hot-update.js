"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/index",{

/***/ "./src/utilits.js":
/*!************************!*\
  !*** ./src/utilits.js ***!
  \************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"animationText\": function() { return /* binding */ animationText; },\n/* harmony export */   \"dataBgImg\": function() { return /* binding */ dataBgImg; },\n/* harmony export */   \"getPagination\": function() { return /* binding */ getPagination; },\n/* harmony export */   \"imgToSVG\": function() { return /* binding */ imgToSVG; },\n/* harmony export */   \"neoh_fn_moving_blog\": function() { return /* binding */ neoh_fn_moving_blog; },\n/* harmony export */   \"pagination\": function() { return /* binding */ pagination; },\n/* harmony export */   \"progressTotop\": function() { return /* binding */ progressTotop; },\n/* harmony export */   \"stickyNav\": function() { return /* binding */ stickyNav; }\n/* harmony export */ });\nvar animationText = function() {\n    var fn_animated_text = document.querySelectorAll(\".fn_animated_text\");\n    fn_animated_text.forEach(function(text) {\n        var letters = text.innerHTML.split(\"\"), time = text.getAttribute(\"wait\"), speed = text.getAttribute(\"speed\");\n        if (!time) {\n            time = 0;\n        }\n        if (!speed) {\n            speed = 4;\n        }\n        speed = speed / 100;\n        text.innerHTML = \"<em>321...</em>\";\n        text.classList.add(\"ready\");\n        if (true) {\n            __webpack_require__(/*! waypoints/lib/noframework.waypoints.min.js */ \"./node_modules/waypoints/lib/noframework.waypoints.min.js\");\n            var waypoint = new Waypoint({\n                element: text,\n                handler: function handler() {\n                    if (!text.classList.contains(\"stop\")) {\n                        text.classList.add(\"stop\");\n                        setTimeout(function() {\n                            text.innerHTML = \"\";\n                            letters.forEach(function(i, e) {\n                                var span = document.createElement(\"span\");\n                                span.textContent = i;\n                                span.style.animationDelay = e * speed + \"s\";\n                                text.append(span);\n                            });\n                        }, time);\n                    }\n                },\n                offset: \"90%\"\n            });\n        }\n    });\n};\nvar neoh_fn_moving_blog = function() {\n    var blog = document.querySelector(\".neoh_fn_moving_blog\");\n    if (blog) {\n        var neoh_fn_moving_box = document.querySelector(\".neoh_fn_moving_box\");\n        if (!neoh_fn_moving_box) {\n            var body = document.querySelector(\"body\");\n            var div = document.createElement(\"div\");\n            div.classList.add(\"neoh_fn_moving_box\");\n            body.appendChild(div);\n        }\n        var movingBox = document.querySelector(\".neoh_fn_moving_box\");\n        var blogItems = document.querySelectorAll(\".neoh_fn_moving_blog .item\");\n        blogItems.forEach(function(list) {\n            list.addEventListener(\"mouseenter\", function(event) {\n                if (!list.classList.contains(\"active\")) {\n                    list.classList.remove(\"active\");\n                    list.classList.add(\"active\");\n                    movingBox.classList.add(\"active\");\n                    //var imgURL = list.querySelector(\".moving_img\").getAttribute(\"src\");\n                    movingBox.style.left = event.clientX + 15 + \"px\";\n                    movingBox.style.top = event.clientY + 15 + \"px\";\n                }\n            });\n            list.addEventListener(\"mouseleave\", function() {\n                list.classList.remove(\"active\");\n                movingBox.classList.remove(\"active\");\n            });\n            list.addEventListener(\"mousemove\", function(event) {\n                movingBox.style.left = event.clientX + 15 + \"px\";\n                movingBox.style.top = event.clientY + 15 + \"px\";\n            });\n        });\n    }\n};\nvar stickyNav = function() {\n    var offset = window.scrollY;\n    var stickys = document.querySelectorAll(\".neoh_fn_header\");\n    for(var i = 0; i < stickys.length; i++){\n        var sticky = stickys[i];\n        if (sticky) {\n            if (offset > 10) {\n                sticky.classList.add(\"fixer\");\n            } else {\n                sticky.classList.remove(\"fixer\");\n            }\n        }\n    }\n};\n// Data image\nvar dataBgImg = function() {\n    var d = document.querySelectorAll(\"[data-bg-img]\");\n    for(var i = 0; i < d.length; i++){\n        var element = d[i];\n        element.style.backgroundImage = \"url(\".concat(element.getAttribute(\"data-bg-img\"), \")\");\n    }\n};\nvar imgToSVG = function() {\n    document.querySelectorAll(\"img.fn__svg\").forEach(function(el) {\n        var imgID = el.getAttribute(\"id\");\n        var imgClass = el.getAttribute(\"class\");\n        var imgURL = el.getAttribute(\"src\");\n        fetch(imgURL).then(function(data) {\n            return data.text();\n        }).then(function(response) {\n            var parser = new DOMParser();\n            var xmlDoc = parser.parseFromString(response, \"text/html\");\n            var svg = xmlDoc.querySelector(\"svg\");\n            if (typeof imgID !== \"undefined\") {\n                svg.setAttribute(\"id\", imgID);\n            }\n            if (typeof imgClass !== \"undefined\") {\n                svg.setAttribute(\"class\", imgClass + \" replaced-svg\");\n            }\n            svg.removeAttribute(\"xmlns:a\");\n            el.parentNode && el.parentNode.replaceChild(svg, el);\n        });\n    });\n};\nvar progressTotop = function() {\n    var winScroll = window.pageYOffset;\n    var height = document.body.clientHeight;\n    var scrolled = parseInt(winScroll / (height - window.innerHeight) * 300);\n    var totop = document.querySelector(\".neoh_fn_totop\");\n    if (winScroll > 0) {\n        totop.classList.add(\"active\");\n    } else {\n        totop.classList.remove(\"active\");\n    }\n    var strockSolid = totop.querySelector(\".stroke-solid\");\n    if (strockSolid) {\n        strockSolid.style.strokeDashoffset = 300 - scrolled;\n    }\n// totop.querySelector(\".stroke-solid\").css(\"stroke-dashoffset\", 300 - scrolled);\n};\n// paggination\nvar pagination = function(listClass, sort, active) {\n    var list = document.querySelectorAll(listClass);\n    for(var i = 0; i < list.length; i++){\n        var element = list[i];\n        if (active === 1) {\n            if (i < sort) {\n                element.classList.remove(\"d-none\");\n            } else {\n                element.classList.add(\"d-none\");\n            }\n        } else {\n            if (i >= (active - 1) * sort && i < active * sort) {\n                element.classList.remove(\"d-none\");\n            } else {\n                element.classList.add(\"d-none\");\n            }\n        }\n    }\n};\nvar getPagination = function(totalNumber, sort) {\n    var arr = new Array(Math.ceil(totalNumber / sort)).fill().map(function(_, idx) {\n        return idx + 1;\n    });\n    return arr;\n};\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports on update so we can compare the boundary\n                // signatures.\n                module.hot.dispose(function (data) {\n                    data.prevExports = currentExports;\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevExports !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevExports !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/utilits.js\n");

/***/ })

});